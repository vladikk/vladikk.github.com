<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Patterns on Vladikk</title>
    <link>http://www.vladikk.com/categories/patterns/</link>
    <description>Recent content in Patterns on Vladikk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>vladik@khononov.com (Vladik Khononov)</managingEditor>
    <webMaster>vladik@khononov.com (Vladik Khononov)</webMaster>
    <lastBuildDate>Mon, 10 Sep 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.vladikk.com/categories/patterns/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dependency Injection Patterns</title>
      <link>http://www.vladikk.com/2012/09/10/dependency-injection-patterns/</link>
      <pubDate>Mon, 10 Sep 2012 00:00:00 +0000</pubDate>
      <author>vladik@khononov.com (Vladik Khononov)</author>
      <guid>http://www.vladikk.com/2012/09/10/dependency-injection-patterns/</guid>
      <description>&lt;p&gt;Choosing the right pattern for implementing dependency injection is an important task and can affect your class’s usability and functionality. In this post I’ll overview 3 patterns of implementing dependency injection - constructor injection, property injection, builder (Joshua Bloch’s pattern, not GoF pattern).
For demonstration purposes we will work with a class called TextTranslator, that requires 3 dependencies: TextReader, TranslationService and TextWriter:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c#&#34;&gt;public class TextTranslator
{
    protected TextReader textReader;
    protected TranslationService translationService;
    protected TextWriter textWriter;    
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The sample code will be written in C#, but the examples are applicable to Java and other object oriented languages.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>