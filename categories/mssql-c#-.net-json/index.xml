<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mssql C# .Net Json on Vladikk</title>
    <link>http://www.vladikk.com/categories/mssql-c#-.net-json/</link>
    <description>Recent content in Mssql C# .Net Json on Vladikk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>vladik@khononov.com (Vladik Khononov)</managingEditor>
    <webMaster>vladik@khononov.com (Vladik Khononov)</webMaster>
    <lastBuildDate>Sun, 09 Jun 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.vladikk.com/categories/mssql-c#-.net-json/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introducing SQL2JSON</title>
      <link>http://www.vladikk.com/2013/06/09/sql2json/</link>
      <pubDate>Sun, 09 Jun 2013 00:00:00 +0000</pubDate>
      <author>vladik@khononov.com (Vladik Khononov)</author>
      <guid>http://www.vladikk.com/2013/06/09/sql2json/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;ll ever try to generate JSON file using Sql Server&amp;rsquo;s Management Studio, probably there&amp;rsquo;ll be lots of pain in your future. If you wanna save the pain, you can use SQL2JSON, an open source project I started last week.&lt;/p&gt;

&lt;p&gt;The idea was born out of a need to generate a huge JSON file containing data from MSSQL database. After seeing our DBA struggling with formatting, escaping weird characters and unicode strings, I decided to write a small utility that will do just that - execute a sql query and capture its results as a json file.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>