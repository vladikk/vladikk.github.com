<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microservices on Vladikk</title>
    <link>http://www.vladikk.com/categories/microservices/</link>
    <description>Recent content in Microservices on Vladikk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>vladik@khononov.com (Vladik Khononov)</managingEditor>
    <webMaster>vladik@khononov.com (Vladik Khononov)</webMaster>
    <lastBuildDate>Sun, 21 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.vladikk.com/categories/microservices/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bounded Contexts are NOT Microservices</title>
      <link>http://www.vladikk.com/2018/01/21/bounded-contexts-vs-microservices/</link>
      <pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate>
      <author>vladik@khononov.com (Vladik Khononov)</author>
      <guid>http://www.vladikk.com/2018/01/21/bounded-contexts-vs-microservices/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://www.vladikk.com/images/bc-ms/rebel-scum.jpg&#34; alt=&#34;Rebel scum&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve always considered Domain-Driven Design’s Bounded Context as a guideline for defining the boundaries of Microservices. I was wrong. Not only is this heuristic flawed, but Bounded Contexts are the exact opposite of Microservices! To explain this point of view, I’ll start with a quick refresh of what Bounded Contexts are; then I’ll discuss the relationship between Bounded Contexts and Microservices.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>